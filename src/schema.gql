# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Project {
  id: Int!
  name: String!
  description: String
  status: statusType
  roles: [Rol!]!
  developers: [Developer!]!
}

enum statusType {
  Active
  Pause
  Done
  Canceled
  Other
}

type Rol {
  id: Int!
  name: String!
}

type Developer {
  id: Int!
  name: String!
  email: String
  roles: [Rol!]!
}

type Query {
  findDeveloperById(id: Int!): [Developer!]!
  findAllDevelopers(filter: FilterDeveloperDto): [Developer!]!
  findAllRoles: [Rol!]!
  findRolById(id: Int!): Rol!
  findAllProject(filter: FilterProjectDto): [Project!]!
  findProjectById(id: Int!): Project!
}

input FilterDeveloperDto {
  rolesIds: [Float!]
  projects: [Float!]
}

input FilterProjectDto {
  status: statusType
  rolesIds: [Float!]
}

type Mutation {
  createDeveloper(DeveloperInput: CreateDeveloperDto!): Developer!
  deleteDeveloper(id: Float!): Boolean
  updateDeveloper(id: Int!, DeveloperInput: UpdateDeveloperDto!): Developer!
  createRol(rolInput: CreateRolDto!): Rol!
  updateRol(id: Int!, rolInput: UpdateRolDto!): Rol!
  deleteRol(id: Float!): Boolean
  createProject(ProjectInput: CreateProjectDto!): Project!
  assignDeveloperToProject(assignDeveloperToProjectInput: AssignDeveloperToProjectDto!): Project!
  deleteProject(id: Float!): Boolean
}

input CreateDeveloperDto {
  name: String!
  email: String
  rolesIds: [Float!]
  projectsIds: [Float!]
}

input UpdateDeveloperDto {
  name: String
  email: String
  rolesIds: [Float!]
  projectsIds: [Float!]
}

input CreateRolDto {
  name: String!
}

input UpdateRolDto {
  name: String
}

input CreateProjectDto {
  name: String!
  description: String
  status: statusType
  rolesIds: [Float!]
  developerIds: [Float!]
}

input AssignDeveloperToProjectDto {
  projectId: Int!
  developerId: Int!
}